import urllib.request
import threading
import logging
import json
import time
import os


THREAD_COUNT = 3
ADDY = "0xeeC384Cdef3aD975EdF1D2f6C1dC9a4b1fEEBF74"
FOUT = "thread-results-" + ADDY + ".txt"
LOWER = 7746
UPPER = 1000000

if os.path.isdir(FOUT) == 0:
    open(FOUT, 'w').write("{")

seeds = list(range(LOWER, UPPER))
seeds.reverse()  # we'll pop this later, which removes from top

print("---")
print(f"Lower:\t\t{str(LOWER)}")
print(f"Upper:\t\t{str(UPPER)}")
print(f"Threads:\t{str(THREAD_COUNT)}")
print("---")


def gen(seed: str) -> None:
    try:
        url = "https://service.cryptotrunks.co/metadata.json?address=" + ADDY + "&seed=" + seed
        text = urllib.request.urlopen(url)
        data = json.load(text)
        elem = data["elements"]
        return(elem)
    except (Exception, urllib.error.HTTPError) as error:
        return([f"ERROR: {type(error).__name__}"])


def genList(thread: int):
    while(seeds):
        seed = seeds.pop()
        value = str.replace(str(gen(str(seed))), '\'', '"')
        print(f"{thread} :: Seed {seed} - {value}")
        json_data = f'\t"{seed}": {value},'
        logging.info(json_data)


if __name__ == "__main__":
    logging.basicConfig(level=logging.DEBUG, filename="logfile.json",
                        filemode="a+", format="%(message)s")

    threads = []

    for i in range(1, THREAD_COUNT+1):
        thread = threading.Thread(
            target=genList, kwargs={"thread": i})
        threads.append(thread)

    for t in threads:
        t.start()

    for t in threads:
        # offset starts to prevent errors
        time.sleep(1.0/THREAD_COUNT)
        t.join()

    print("Done!")
