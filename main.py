import urllib.request
import ijson
import json
import os
import re


ADDY = "0xeeC384Cdef3aD975EdF1D2f6C1dC9a4b1fEEBF74"
FOUT = "results-" + ADDY + ".json"

if os.path.getsize(FOUT) == 0:  # empty
    LOWER = 1
else:
    with open(FOUT, "rb") as file:
        # gets last item json file
        for key, value in ijson.kvitems(file, ''):
            pass
        LOWER = int(key)+1

UPPER = 1e9

print("Lower:\t" + str(LOWER))
print("Upper:\t" + str(UPPER))


def gen(seed: str):
    try:
        url = "https://service.cryptotrunks.co/metadata.json?address=" + ADDY + "&seed=" + seed
        print("Testing seed " + seed + " at URL " + url)
        text = urllib.request.urlopen(url)
        data = json.load(text)
        elem = data["elements"]
        print(elem)

        with open(FOUT, 'r') as file:
            json_data = json.load(file)

        json_data.update({seed: elem})

        with open(FOUT, 'w') as file:
            json.dump(json_data, file, indent=4)
    except (Exception, urllib.error.HTTPError) as error:
        template = "An exception of type {0} occurred. Arguments:{1!r}"
        message = template.format(type(error).__name__, error.args)
        print(message)

        with open(FOUT, 'r') as file:
            json_data = json.load(file)

        json_data.update({seed: "ERROR"})

        with open(FOUT, 'w') as file:
            json.dump(json_data, file, indent=4)


if __name__ == "__main__":
    for i in range(int(LOWER), int(UPPER)):
        gen(str(i))
